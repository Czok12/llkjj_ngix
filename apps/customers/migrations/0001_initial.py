# Generated by Django 5.2.4 on 2025-07-07 07:52

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField(verbose_name="Objekt-ID")),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("CREATE", "Erstellt"),
                            ("UPDATE", "Geändert"),
                            ("DELETE", "Gelöscht"),
                        ],
                        max_length=20,
                        verbose_name="Aktion",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Zeitstempel"),
                ),
                (
                    "changes",
                    models.JSONField(
                        default=dict,
                        help_text="Details der Änderungen im JSON-Format",
                        verbose_name="Änderungen",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP-Adresse"
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                        verbose_name="Objekttyp",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Benutzer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Audit-Log",
                "verbose_name_plural": "Audit-Logs",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Erstellt am"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Geändert am"),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Firmenname")),
                (
                    "legal_form",
                    models.CharField(
                        blank=True,
                        help_text="z.B. GmbH, AG, e.K.",
                        max_length=50,
                        null=True,
                        verbose_name="Rechtsform",
                    ),
                ),
                ("street", models.CharField(max_length=255, verbose_name="Straße")),
                (
                    "house_number",
                    models.CharField(max_length=20, verbose_name="Hausnummer"),
                ),
                ("postal_code", models.CharField(max_length=20, verbose_name="PLZ")),
                ("city", models.CharField(max_length=100, verbose_name="Ort")),
                (
                    "country_code",
                    models.CharField(
                        default="DE", max_length=2, verbose_name="Ländercode"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Telefon"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="E-Mail"
                    ),
                ),
                (
                    "website",
                    models.URLField(blank=True, null=True, verbose_name="Website"),
                ),
                (
                    "tax_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Steuernummer",
                    ),
                ),
                (
                    "vat_id",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Ungültiges Format für USt-IdNr. (z.B. DE123456789)",
                                regex="^[A-Z]{2}[A-Z0-9]+$",
                            )
                        ],
                        verbose_name="USt-IdNr.",
                    ),
                ),
                (
                    "default_tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("19.00"),
                        max_digits=5,
                        verbose_name="Standard MwSt-Satz (%)",
                    ),
                ),
                (
                    "invoice_due_days",
                    models.PositiveIntegerField(
                        default=14, verbose_name="Zahlungsziel (Tage)"
                    ),
                ),
                (
                    "bank_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Bank"
                    ),
                ),
                (
                    "bank_account_owner",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Kontoinhaber",
                    ),
                ),
                (
                    "iban",
                    models.CharField(
                        blank=True,
                        max_length=34,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Ungültiges IBAN-Format",
                                regex="^[A-Z]{2}[0-9]{2}[A-Z0-9]{4}[0-9]{7}([A-Z0-9]?){0,16}$",
                            )
                        ],
                        verbose_name="IBAN",
                    ),
                ),
                (
                    "bic",
                    models.CharField(
                        blank=True,
                        max_length=11,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Ungültiges BIC-Format",
                                regex="^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$",
                            )
                        ],
                        verbose_name="BIC",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Erstellt von",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Geändert von",
                    ),
                ),
            ],
            options={
                "verbose_name": "Unternehmen",
                "verbose_name_plural": "Unternehmen",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Erstellt am"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Geändert am"),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name/Firma")),
                (
                    "customer_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Kundennummer",
                    ),
                ),
                (
                    "salutation",
                    models.CharField(
                        blank=True,
                        help_text="z.B. 'Sehr geehrte Frau Schmidt', 'Lieber Herr Müller'",
                        max_length=255,
                        null=True,
                        verbose_name="Anrede",
                    ),
                ),
                (
                    "street",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Straße"
                    ),
                ),
                (
                    "house_number",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Hausnummer"
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="PLZ"
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Ort"
                    ),
                ),
                (
                    "address_additional",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Adresszusatz",
                    ),
                ),
                (
                    "country_code",
                    models.CharField(
                        default="DE", max_length=2, verbose_name="Ländercode"
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        blank=True,
                        help_text="Wird automatisch generiert aus strukturierten Feldern",
                        null=True,
                        verbose_name="Adressblock",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="E-Mail"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Telefon"
                    ),
                ),
                (
                    "contact_person",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Ansprechpartner",
                    ),
                ),
                (
                    "vat_id",
                    models.CharField(
                        blank=True, max_length=30, null=True, verbose_name="USt-IdNr."
                    ),
                ),
                (
                    "tax_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Steuernummer",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "credit_limit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Kreditlimit",
                    ),
                ),
                (
                    "payment_terms_days",
                    models.PositiveIntegerField(
                        default=14, verbose_name="Zahlungsziel (Tage)"
                    ),
                ),
                (
                    "customer_type",
                    models.CharField(
                        choices=[
                            ("private", "Privatkunde"),
                            ("business", "Geschäftskunde"),
                            ("public", "Öffentlicher Auftraggeber"),
                        ],
                        default="business",
                        max_length=20,
                        verbose_name="Kundentyp",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notizen"),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customers",
                        to="customers.company",
                        verbose_name="Unternehmen",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Erstellt von",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Geändert von",
                    ),
                ),
            ],
            options={
                "verbose_name": "Kunde",
                "verbose_name_plural": "Kunden",
                "ordering": ["name"],
                "unique_together": {("company", "customer_number")},
            },
        ),
        migrations.CreateModel(
            name="CustomerContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Erstellt am"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Geändert am"),
                ),
                (
                    "first_name",
                    models.CharField(max_length=100, verbose_name="Vorname"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=100, verbose_name="Nachname"),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Titel"
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Position"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="E-Mail"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Telefon"
                    ),
                ),
                (
                    "mobile",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Mobil"
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(default=False, verbose_name="Hauptkontakt"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notizen"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Erstellt von",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to="customers.customer",
                        verbose_name="Kunde",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Geändert von",
                    ),
                ),
            ],
            options={
                "verbose_name": "Kundenkontakt",
                "verbose_name_plural": "Kundenkontakte",
                "ordering": ["-is_primary", "last_name", "first_name"],
            },
        ),
    ]
