# Generated by Django 5.2.4 on 2025-07-07 07:52

import django.core.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CatalogCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Erstellt am"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Geändert am"),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Kategoriename"),
                ),
                ("slug", models.SlugField(max_length=255, verbose_name="URL-Slug")),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Beschreibung"
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(default=0, verbose_name="Sortierung"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
            ],
            options={
                "verbose_name": "Katalog-Kategorie",
                "verbose_name_plural": "Katalog-Kategorien",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="CatalogItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Erstellt am"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Geändert am"),
                ),
                (
                    "item_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Artikel-/Leistungsnummer",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Klare Bezeichnung der Leistung oder des Artikels",
                        max_length=255,
                        verbose_name="Bezeichnung",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Ausführlichere Beschreibung (optional)",
                        null=True,
                        verbose_name="Beschreibung",
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        help_text="z.B. Std, Stk, m, kg, Pauschal",
                        max_length=20,
                        verbose_name="Mengeneinheit",
                    ),
                ),
                (
                    "unit_price_net",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Netto-Einzelpreis pro Einheit (muss positiv sein)",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Netto-Einzelpreis",
                    ),
                ),
                (
                    "tax_rate_percent",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Anzuwendender Mehrwertsteuersatz in Prozent (z.B. 19.0, 7.0, 0.0)",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="MwSt-Satz (%)",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="SKU/Barcode",
                    ),
                ),
                (
                    "cost_type",
                    models.CharField(
                        choices=[
                            ("material", "Material"),
                            ("labor", "Arbeitszeit"),
                            ("service", "Dienstleistung"),
                            ("transport", "Transport/Anfahrt"),
                            ("equipment", "Gerät/Maschine"),
                            ("other", "Sonstiges"),
                        ],
                        default="service",
                        max_length=20,
                        verbose_name="Kostenart",
                    ),
                ),
                (
                    "stock_quantity",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Lagerbestand",
                    ),
                ),
                (
                    "stock_min_level",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Mindestbestand",
                    ),
                ),
                (
                    "supplier",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Lieferant"
                    ),
                ),
                (
                    "supplier_item_number",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Lieferanten-Artikelnummer",
                    ),
                ),
                (
                    "last_cost_update",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Letzte Kostenaktualisierung",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "is_favorite",
                    models.BooleanField(default=False, verbose_name="Favorit"),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notizen"),
                ),
            ],
            options={
                "verbose_name": "Katalog-Eintrag",
                "verbose_name_plural": "Katalog-Einträge",
                "ordering": ["category__name", "name"],
            },
        ),
        migrations.CreateModel(
            name="PriceHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Alter Preis"
                    ),
                ),
                (
                    "new_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Neuer Preis"
                    ),
                ),
                (
                    "change_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Änderungsdatum"
                    ),
                ),
                (
                    "change_reason",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Grund der Änderung",
                    ),
                ),
            ],
            options={
                "verbose_name": "Preishistorie",
                "verbose_name_plural": "Preishistorien",
                "ordering": ["-change_date"],
            },
        ),
    ]
