[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DJ",  # flake8-django
    "UP",  # pyupgrade
    "I",   # import sorting (ruff handles this directly)
    "N",   # pep8-naming
    "S",   # bandit (security)
    "T20", # flake8-print
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B006",  # do not use mutable data structures for argument defaults
    "S101",  # use of assert (ok in tests)
    "T201",  # print statements (ok for debugging)
    "B904",  # Within `except` clause, raise exceptions with `raise ... from err`
    "DJ012", # Order of model's inner classes (too strict for existing code)
]

[tool.ruff.lint.per-file-ignores]
"*/migrations/*" = ["E501", "F401", "F841", "N806", "N999"]
"*/settings/*" = ["F401", "F403", "F405"]
"manage.py" = ["F401"]
"*/tests/*" = ["S101", "S106"]  # Allow asserts and hardcoded passwords in tests

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  migrations
)/
'''

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
strict = false

# Django-spezifische Einstellungen
plugins = ["mypy_django_plugin.main"]

[[tool.mypy.overrides]]
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "llkjj_knut.settings"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "llkjj_knut.settings.test"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = "--reuse-db --nomigrations"
testpaths = ["tests"]

[tool.coverage.run]
source = [ "." ]
omit = [
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
    "manage.py",
    "*/settings/*",
    "*/tests/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
