# Generated by Django 5.0.14 on 2025-06-26 10:06

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("belege", "0001_initial"),
        ("konten", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Geschaeftspartner",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Eindeutige ID des Geschäftspartners",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Firmenname oder vollständiger Name der Person",
                        max_length=200,
                        verbose_name="Name",
                    ),
                ),
                (
                    "partner_typ",
                    models.CharField(
                        choices=[
                            ("KUNDE", "Kunde"),
                            ("LIEFERANT", "Lieferant"),
                            ("BEIDES", "Kunde & Lieferant"),
                        ],
                        default="KUNDE",
                        help_text="Art des Geschäftspartners",
                        max_length=10,
                        verbose_name="Partner-Typ",
                    ),
                ),
                (
                    "ansprechpartner",
                    models.CharField(
                        blank=True,
                        help_text="Name der Kontaktperson (optional)",
                        max_length=100,
                        verbose_name="Ansprechpartner",
                    ),
                ),
                (
                    "strasse",
                    models.CharField(
                        blank=True,
                        help_text="Straße und Hausnummer",
                        max_length=100,
                        verbose_name="Straße",
                    ),
                ),
                (
                    "plz",
                    models.CharField(
                        blank=True,
                        help_text="Postleitzahl (5-stellig)",
                        max_length=10,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="PLZ muss 5 Ziffern haben", regex="^\\d{5}$"
                            )
                        ],
                        verbose_name="PLZ",
                    ),
                ),
                (
                    "ort",
                    models.CharField(
                        blank=True,
                        help_text="Ort/Stadt",
                        max_length=100,
                        verbose_name="Ort",
                    ),
                ),
                (
                    "land",
                    models.CharField(
                        default="Deutschland",
                        help_text="Land",
                        max_length=50,
                        verbose_name="Land",
                    ),
                ),
                (
                    "telefon",
                    models.CharField(
                        blank=True,
                        help_text="Telefonnummer",
                        max_length=20,
                        verbose_name="Telefon",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="E-Mail-Adresse",
                        max_length=254,
                        validators=[django.core.validators.EmailValidator()],
                        verbose_name="E-Mail",
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True,
                        help_text="Website-URL (optional)",
                        verbose_name="Website",
                    ),
                ),
                (
                    "steuernummer",
                    models.CharField(
                        blank=True,
                        help_text="Steuernummer des Partners (optional)",
                        max_length=50,
                        verbose_name="Steuernummer",
                    ),
                ),
                (
                    "ust_id",
                    models.CharField(
                        blank=True,
                        help_text="Umsatzsteuer-ID (optional)",
                        max_length=20,
                        verbose_name="USt-ID",
                    ),
                ),
                (
                    "aktiv",
                    models.BooleanField(
                        default=True,
                        help_text="Ist der Partner aktiv?",
                        verbose_name="Aktiv",
                    ),
                ),
                (
                    "notizen",
                    models.TextField(
                        blank=True,
                        help_text="Interne Notizen zum Partner",
                        verbose_name="Notizen",
                    ),
                ),
                (
                    "erstellt_am",
                    models.DateTimeField(auto_now_add=True, verbose_name="Erstellt am"),
                ),
                (
                    "geaendert_am",
                    models.DateTimeField(auto_now=True, verbose_name="Geändert am"),
                ),
            ],
            options={
                "verbose_name": "Geschäftspartner",
                "verbose_name_plural": "Geschäftspartner",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="buchungen_g_name_8aadcf_idx"),
                    models.Index(
                        fields=["partner_typ"], name="buchungen_g_partner_363540_idx"
                    ),
                    models.Index(fields=["aktiv"], name="buchungen_g_aktiv_ad6067_idx"),
                    models.Index(
                        fields=["plz", "ort"], name="buchungen_g_plz_c0a3e9_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Buchungssatz",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Eindeutige ID des Buchungssatzes",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "buchungsdatum",
                    models.DateField(
                        help_text="Datum der Geschäftstransaktion",
                        verbose_name="Buchungsdatum",
                    ),
                ),
                (
                    "buchungstext",
                    models.CharField(
                        help_text="Beschreibung der Buchung (Verwendungszweck)",
                        max_length=200,
                        verbose_name="Buchungstext",
                    ),
                ),
                (
                    "betrag",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Buchungsbetrag in Euro (immer positiv)",
                        max_digits=10,
                        verbose_name="Betrag",
                    ),
                ),
                (
                    "referenz",
                    models.CharField(
                        blank=True,
                        help_text="Externe Referenz (z.B. Rechnungsnummer)",
                        max_length=50,
                        verbose_name="Referenz",
                    ),
                ),
                (
                    "notizen",
                    models.TextField(
                        blank=True,
                        help_text="Interne Notizen zur Buchung",
                        verbose_name="Notizen",
                    ),
                ),
                (
                    "automatisch_erstellt",
                    models.BooleanField(
                        default=False,
                        help_text="Wurde automatisch durch Import erstellt?",
                        verbose_name="Automatisch erstellt",
                    ),
                ),
                (
                    "validiert",
                    models.BooleanField(
                        default=False,
                        help_text="Wurde die Buchung validiert/geprüft?",
                        verbose_name="Validiert",
                    ),
                ),
                (
                    "erstellt_am",
                    models.DateTimeField(auto_now_add=True, verbose_name="Erstellt am"),
                ),
                (
                    "geaendert_am",
                    models.DateTimeField(auto_now=True, verbose_name="Geändert am"),
                ),
                (
                    "beleg",
                    models.ForeignKey(
                        blank=True,
                        help_text="Zugehöriger Beleg (GoBD-Anforderung)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="buchungssaetze",
                        to="belege.beleg",
                        verbose_name="Beleg",
                    ),
                ),
                (
                    "haben_konto",
                    models.ForeignKey(
                        help_text="Konto im Haben (Wo geht das Geld hin?)",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="haben_buchungen",
                        to="konten.konto",
                        verbose_name="Haben-Konto",
                    ),
                ),
                (
                    "soll_konto",
                    models.ForeignKey(
                        help_text="Konto im Soll (Wo kommt das Geld her?)",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="soll_buchungen",
                        to="konten.konto",
                        verbose_name="Soll-Konto",
                    ),
                ),
                (
                    "geschaeftspartner",
                    models.ForeignKey(
                        blank=True,
                        help_text="Zugehöriger Geschäftspartner",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="buchungssaetze",
                        to="buchungen.geschaeftspartner",
                        verbose_name="Geschäftspartner",
                    ),
                ),
            ],
            options={
                "verbose_name": "Buchungssatz",
                "verbose_name_plural": "Buchungssätze",
                "ordering": ["-buchungsdatum", "-erstellt_am"],
                "indexes": [
                    models.Index(
                        fields=["buchungsdatum"], name="buchungen_b_buchung_3de05e_idx"
                    ),
                    models.Index(
                        fields=["soll_konto"], name="buchungen_b_soll_ko_bc1b61_idx"
                    ),
                    models.Index(
                        fields=["haben_konto"], name="buchungen_b_haben_k_9b6b5f_idx"
                    ),
                    models.Index(
                        fields=["geschaeftspartner"],
                        name="buchungen_b_geschae_3149d0_idx",
                    ),
                    models.Index(
                        fields=["betrag"], name="buchungen_b_betrag_563612_idx"
                    ),
                    models.Index(
                        fields=["validiert"], name="buchungen_b_validie_5c635c_idx"
                    ),
                ],
            },
        ),
    ]
