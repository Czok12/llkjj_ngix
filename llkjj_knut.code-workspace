{
    "folders": [
        {
            "name": "🎨 llkjj_knut (Buchhaltung)",
            "path": "."
        },
        {
            "name": "🤖 AI Export",
            "path": "./ai_export"
        },
        {
            "name": "📄 Dokumentation",
            "path": "./Dokumentation"
        }
    ],
    "settings": {
        // === Python & Django Konfiguration ===
        "python.defaultInterpreterPath": "/Users/czok/Skripte/venv_llkjj/bin/python",
        "python.terminal.activateEnvironment": true,
        "python.terminal.activateEnvInCurrentTerminal": true,
        "python.analysis.typeCheckingMode": "strict",
        "python.analysis.autoImportCompletions": true,
        "python.analysis.include": [
            "**/*.py"
        ],
        "python.analysis.exclude": [
            "**/migrations/**",
            "**/__pycache__/**",
            "**/venv/**"
        ],
        // === Django Spezifische Einstellungen ===
        "python.defaultInterpreterPath": "/Users/czok/Skripte/venv_llkjj/bin/python",
        "django.snippets.exclude": [
            "migrations"
        ],
        // === Terminal Optimierung ===
        "terminal.integrated.cwd": "/Users/czok/Skripte/llkjj_art",
        "terminal.integrated.defaultLocation": "view",
        "terminal.integrated.profiles.osx": {
            "llkjj-django": {
                "path": "/bin/zsh",
                "args": [
                    "-l"
                ],
                "env": {
                    "VIRTUAL_ENV": "/Users/czok/Skripte/venv_llkjj",
                    "PATH": "/Users/czok/Skripte/venv_llkjj/bin:${env:PATH}",
                    "PYTHONPATH": "${workspaceFolder}",
                    "DJANGO_SETTINGS_MODULE": "llkjj_knut.settings",
                    "DJANGO_DEBUG": "True"
                }
            }
        },
        "terminal.integrated.defaultProfile.osx": "llkjj-django",
        // === Dateizuordnungen & Templates ===
        "files.associations": {
            "*.html": "django-html",
            "*.txt": "log",
            "*.env*": "properties",
            "Dockerfile*": "dockerfile",
            "docker-compose*.yml": "dockercompose"
        },
        "emmet.includeLanguages": {
            "django-html": "html"
        },
        // === Explorer Optimierung ===
        "explorer.sortOrder": "type",
        "explorer.fileNesting.enabled": true,
        "explorer.fileNesting.patterns": {
            // Django App Struktur
            "models.py": "admin.py,apps.py,forms.py,serializers.py,views.py,urls.py,services.py,tasks.py,tests.py",
            "settings.py": "wsgi.py,asgi.py,urls.py,celery.py",
            "manage.py": "requirements*.txt,pyproject.toml,.env*,docker-compose*.yml,setup_*.sh,start*.sh,start.py",
            // Frontend Assets
            "package.json": "postcss.config.js,tailwind.config.js,package-lock.json,yarn.lock",
            // Konfigurationsdateien
            "pyproject.toml": ".ruff_cache,.mypy_cache",
            "docker-compose.yml": "Dockerfile,.dockerignore"
        },
        // === Code-Qualität & Formatierung ===
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit",
            "source.fixAll.ruff": "explicit"
        },
        "[python]": {
            "editor.defaultFormatter": "ms-python.black-formatter",
            "editor.formatOnSave": true,
            "editor.codeActionsOnSave": {
                "source.organizeImports": "explicit"
            }
        },
        "[django-html]": {
            "editor.defaultFormatter": "vscode.html-language-features",
            "editor.formatOnSave": true
        },
        "[json]": {
            "editor.defaultFormatter": "vscode.json-language-features"
        },
        // === Ruff Konfiguration ===
        "ruff.configuration": "${workspaceFolder}/pyproject.toml",
        "ruff.showNotifications": "onError",
        // === Ausschlüsse (Performance) ===
        "files.exclude": {
            "**/__pycache__": true,
            "**/*.pyc": true,
            "**/venv": true,
            "**/.pytest_cache": true,
            "**/node_modules": true,
            "**/logs/*.log": true,
            "**/.ruff_cache": true,
            "**/.mypy_cache": true,
            "**/staticfiles": true,
            "**/celerybeat-schedule": true
        },
        "search.exclude": {
            "**/__pycache__": true,
            "**/*.pyc": true,
            "**/venv": true,
            "**/node_modules": true,
            "**/staticfiles": true,
            "**/migrations": true,
            "**/logs": true
        },
        "files.watcherExclude": {
            "**/__pycache__/**": true,
            "**/venv/**": true,
            "**/node_modules/**": true,
            "**/.ruff_cache/**": true,
            "**/.mypy_cache/**": true
        },
        // === Copilot & KI ===
        "github.copilot.enable": {
            "*": true,
            "python": true,
            "django-html": true,
            "html": true,
            "css": true,
            "javascript": true,
            "json": true
        },
        "github.copilot.chat.localeOverride": "de",
        // === Git Integration ===
        "git.ignoreLimitWarning": true,
        "git.autofetch": true,
        // === Tailwind CSS ===
        "tailwindCSS.includeLanguages": {
            "django-html": "html"
        },
        "tailwindCSS.experimental.configFile": "${workspaceFolder}/tailwind.config.js"
    },
    "tasks": {
        "version": "2.0.0",
        "tasks": [
            {
                "label": "🚀 Django: Server starten",
                "type": "shell",
                "command": "python manage.py runserver 8000",
                "group": {
                    "kind": "build",
                    "isDefault": true
                },
                "isBackground": true,
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "panel": "new"
                },
                "problemMatcher": []
            },
            {
                "label": "📊 Django: Migration erstellen & ausführen",
                "type": "shell",
                "command": "python manage.py makemigrations && python manage.py migrate",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "panel": "shared"
                }
            },
            {
                "label": "💰 SKR03: Konten importieren",
                "type": "shell",
                "command": "python manage.py import_skr03",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "panel": "shared"
                }
            },
            {
                "label": "🏗️ Projekt: Vollständiges Setup",
                "type": "shell",
                "command": "python manage.py migrate && python manage.py import_skr03 && python manage.py collectstatic --noinput && echo '✅ Projekt bereit!'",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "panel": "new"
                }
            },
            {
                "label": "🧪 Tests: Alle ausführen",
                "type": "shell",
                "command": "python manage.py test --verbosity=2 --keepdb",
                "group": {
                    "kind": "test",
                    "isDefault": true
                },
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "panel": "shared"
                }
            },
            {
                "label": "🔍 Code-Qualität: Vollständige Prüfung",
                "type": "shell",
                "command": "ruff check . && ruff format --check . && mypy .",
                "group": "test",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "panel": "shared"
                }
            },
            {
                "label": "🛠️ Code: Formatieren & Reparieren",
                "type": "shell",
                "command": "ruff format . && ruff check --fix .",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "panel": "shared"
                }
            },
            {
                "label": "🗄️ PostgreSQL: Container starten",
                "type": "shell",
                "command": "docker-compose up -d postgres",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "panel": "shared"
                }
            },
            {
                "label": "🤖 AI: Projekt-Export erstellen",
                "type": "shell",
                "command": "mkdir -p ai_export && find . -name '*.py' -not -path './*/__pycache__/*' -not -path './venv/*' -not -path './.venv/*' | head -50 | xargs -I {} cp {} ai_export/ 2>/dev/null || true && echo '✅ Python-Dateien in ai_export/ exportiert'",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "panel": "shared"
                }
            },
            {
                "label": "📦 Requirements: Aktualisieren",
                "type": "shell",
                "command": "pip install -r requirements.txt --upgrade && pip freeze > requirements-freeze.txt",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "panel": "shared"
                }
            }
        ]
    },
    "launch": {
        "version": "0.2.0",
        "configurations": [
            {
                "name": "🐍 Django: Debug Server",
                "type": "debugpy",
                "request": "launch",
                "program": "${workspaceFolder}/manage.py",
                "args": [
                    "runserver",
                    "8000",
                    "--noreload"
                ],
                "django": true,
                "console": "integratedTerminal",
                "env": {
                    "DJANGO_DEBUG": "True",
                    "PYTHONPATH": "${workspaceFolder}"
                },
                "justMyCode": false
            },
            {
                "name": "🧪 Django: Debug Tests (Aktuelle Datei)",
                "type": "debugpy",
                "request": "launch",
                "program": "${workspaceFolder}/manage.py",
                "args": [
                    "test",
                    "${relativeFileDirname}",
                    "--verbosity=2",
                    "--keepdb"
                ],
                "django": true,
                "console": "integratedTerminal",
                "justMyCode": false
            },
            {
                "name": "⚙️ Django: Debug Management Command",
                "type": "debugpy",
                "request": "launch",
                "program": "${workspaceFolder}/manage.py",
                "args": [
                    "${input:managementCommand}"
                ],
                "django": true,
                "console": "integratedTerminal"
            }
        ],
        "inputs": [
            {
                "id": "managementCommand",
                "description": "Django Management Command",
                "type": "promptString",
                "default": "shell"
            }
        ]
    },
    "extensions": {
        "recommendations": [
            // Python Essentials
            "ms-python.python",
            "ms-python.debugpy",
            "ms-python.black-formatter",
            "charliermarsh.ruff",
            "ms-python.mypy-type-checker",
            // Django Spezifisch
            "batisteo.vscode-django",
            // Frontend & Styling
            "bradlc.vscode-tailwindcss",
            // KI & Produktivität
            "github.copilot",
            "github.copilot-chat",
            // Datenbank
            "ms-ossdata.vscode-postgresql",
            "ckolkman.vscode-postgres",
            // DevOps & Tools
            "ms-vscode-remote.remote-containers",
            "ms-azuretools.vscode-docker",
            // Dokumentation & Logs
            "yzhang.markdown-all-in-one",
            "emilast.logfilehighlighter",
            // Nützliche Erweiterungen
            "ms-vscode.vscode-json",
            "redhat.vscode-yaml",
            "ms-vscode.vscode-typescript-next"
        ]
    }
}