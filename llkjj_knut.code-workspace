{
    "folders": [
        {
            "name": "üé® llkjj_knut (Root)",
            "path": "."
        },
        {
            "name": "ÔøΩ AI Export (f√ºr Google AI Studio)",
            "path": "./ai_export"
        },
        {
            "name": "ÔøΩüß† Models (Datenmodelle)",
            "path": "."
        },
        {
            "name": "üîÑ Views & Services",
            "path": "."
        },
        {
            "name": "üìã Forms & Admin",
            "path": "."
        },
        {
            "name": "üìö Dokumentation",
            "path": "./internes"
        },
        {
            "name": "‚öôÔ∏è Core (Django Settings)",
            "path": "./llkjj_knut"
        },
        {
            "name": "üí∞ Konten (SKR03)",
            "path": "./konten"
        },
        {
            "name": "üìù Buchungen",
            "path": "./buchungen"
        },
        {
            "name": "üìÑ Belege",
            "path": "./belege"
        },
        {
            "name": "üìä Auswertungen",
            "path": "./auswertungen"
        },
        {
            "name": "üßæ Steuer",
            "path": "./steuer"
        },
        {
            "name": "üîß Einstellungen",
            "path": "./einstellungen"
        }
    ],
    "settings": {
        "python.defaultInterpreterPath": "/Users/czok/Skripte/venv_llkjj/bin/python",
        "python.terminal.activateEnvironment": true,
        "python.terminal.activateEnvInCurrentTerminal": true,
        "python.terminal.executeInFileDir": false,
        "terminal.integrated.cwd": "${workspaceFolder}",
        "terminal.integrated.env.osx": {
            "VIRTUAL_ENV": "/Users/czok/Skripte/venv_llkjj",
            "PATH": "/Users/czok/Skripte/venv_llkjj/bin:${env:PATH}",
            "PYTHONPATH": "${workspaceFolder}"
        },
        "files.associations": {
            "*.html": "django-html",
            "*.txt": "log",
            "logs/*.txt": "log"
        },
        "emmet.includeLanguages": {
            "django-html": "html"
        },
        "github.copilot.enable": {
            "*": true,
            "python": true,
            "django-html": true,
            "html": true,
            "css": true,
            "javascript": true
        },
        "github.copilot.chat.localeOverride": "de",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit",
            "source.fixAll.ruff": "explicit"
        },
        "explorer.sortOrder": "type",
        "explorer.fileNesting.enabled": true,
        "explorer.fileNesting.expand": false,
        "explorer.fileNesting.patterns": {
            "*.py": "${capture}.pyc",
            "models.py": "admin.py,apps.py,forms.py,serializers.py,views.py,urls.py,services.py,tasks.py",
            "settings.py": "wsgi.py,asgi.py,urls.py,celery.py",
            "manage.py": "requirements*.txt,pyproject.toml,.env*,docker-compose.yml",
            "views.py": "forms.py,serializers.py",
            "admin.py": "forms.py",
            "__init__.py": "apps.py"
        },
        "terminal.integrated.defaultProfile.osx": "zsh",
        "files.exclude": {
            "**/__pycache__": true,
            "**/*.pyc": true,
            "**/venv": true,
            "**/.pytest_cache": true,
            "**/node_modules": true,
            "**/logs/*.log": true
        },
        "search.exclude": {
            "**/__pycache__": true,
            "**/*.pyc": true,
            "**/venv": true,
            "**/node_modules": true,
            "**/staticfiles": true
        },
        "files.watcherExclude": {
            "**/__pycache__/**": true,
            "**/venv/**": true,
            "**/node_modules/**": true
        },
        "workbench.tree.renderIndentGuides": "always",
        "workbench.tree.indent": 20,
        "git.autofetch": true,
        "git.confirmSync": false,
        "python.analysis.autoImportCompletions": true,
        "python.analysis.typeCheckingMode": "basic"
    },
    "tasks": {
        "version": "2.0.0",
        "tasks": [
            {
                "label": "üöÄ Django: Vollstart (Migration + Server)",
                "type": "shell",
                "command": "python manage.py migrate && python manage.py runserver 8000",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "panel": "new"
                },
                "isBackground": true,
                "problemMatcher": []
            },
            {
                "label": "üì¶ Setup: Projekt initialisieren",
                "type": "shell",
                "command": "python3 -m venv /Users/czok/Skripte/venv_llkjj && source /Users/czok/Skripte/venv_llkjj/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py import_skr03",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "panel": "new"
                }
            },
            {
                "label": "üí∞ SKR03: Konten importieren",
                "type": "shell",
                "command": "python manage.py import_skr03",
                "group": "build"
            },
            {
                "label": "üß™ Tests: Alle Apps",
                "type": "shell",
                "command": "python manage.py test --verbosity=2",
                "group": "test",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "panel": "shared"
                }
            },
            {
                "label": "üîç Code-Qualit√§t: Vollcheck",
                "type": "shell",
                "command": "ruff check . && mypy . && black --check .",
                "group": "test",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "panel": "shared"
                }
            },
            {
                "label": "üìù Logging: Test durchf√ºhren",
                "type": "shell",
                "command": "python manage.py shell -c \"import logging; logger=logging.getLogger('llkjj_knut'); logger.info('üéØ Peter Zwegat Logging-Test'); logger.warning('‚ö†Ô∏è Test-Warnung'); logger.error('‚ùå Test-Fehler'); print('‚úÖ Logging-Test abgeschlossen - pr√ºfen Sie logs/llkjj_knut.txt')\"",
                "group": "test",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "panel": "shared"
                }
            },
            {
                "label": "üìÑ Logging: .txt-Datei √∂ffnen",
                "type": "shell",
                "command": "code logs/llkjj_knut.txt",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "silent",
                    "panel": "shared"
                }
            },
            {
                "label": "ü§ñ AI: Backend-Dateien sammeln",
                "type": "shell",
                "command": "mkdir -p ai_export && find . -name 'models.py' -o -name 'views.py' -o -name 'services.py' -o -name 'forms.py' -o -name 'admin.py' -o -name 'urls.py' -o -name 'tasks.py' -o -name 'settings.py' | grep -v __pycache__ | xargs -I {} cp {} ai_export/ && echo '‚úÖ Backend-Dateien in ai_export/ gesammelt'",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "panel": "shared"
                }
            },
            {
                "label": "ü§ñ AI: Backend-Code in eine Datei",
                "type": "shell",
                "command": "echo '# === LLKJJ_KNUT BACKEND CODE EXPORT ===' > ai_export_all.py && echo '# Generiert am: $(date)' >> ai_export_all.py && echo '' >> ai_export_all.py && find . -name 'models.py' -o -name 'views.py' -o -name 'services.py' -o -name 'forms.py' -o -name 'admin.py' -o -name 'urls.py' -o -name 'tasks.py' -o -name 'settings.py' | grep -v __pycache__ | while read file; do echo \"# === $file ===\" >> ai_export_all.py; cat \"$file\" >> ai_export_all.py; echo '' >> ai_export_all.py; echo '' >> ai_export_all.py; done && echo '‚úÖ Alle Backend-Dateien in ai_export_all.py zusammengefasst'",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "panel": "shared"
                }
            },
            {
                "label": "ü§ñ AI: Export-Ordner √∂ffnen",
                "type": "shell",
                "command": "code ai_export/ && code ai_export_all.py",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "silent",
                    "panel": "shared"
                }
            }
        ]
    },
    "launch": {
        "version": "0.2.0",
        "configurations": [
            {
                "name": "üêç Django: Debug Server",
                "type": "debugpy",
                "request": "launch",
                "program": "${workspaceFolder}/manage.py",
                "args": [
                    "runserver",
                    "8000",
                    "--noreload"
                ],
                "django": true,
                "console": "integratedTerminal",
                "env": {
                    "DJANGO_DEBUG": "True"
                }
            },
            {
                "name": "üß™ Django: Debug Tests",
                "type": "debugpy",
                "request": "launch",
                "program": "${workspaceFolder}/manage.py",
                "args": [
                    "test",
                    "${input:testApp}"
                ],
                "django": true,
                "console": "integratedTerminal"
            },
            {
                "name": "üìù Django: Debug mit Logging",
                "type": "debugpy",
                "request": "launch",
                "program": "${workspaceFolder}/manage.py",
                "args": [
                    "runserver",
                    "8000",
                    "--noreload"
                ],
                "django": true,
                "console": "integratedTerminal",
                "env": {
                    "DJANGO_DEBUG": "True",
                    "LOG_LEVEL": "DEBUG",
                    "ENABLE_FILE_LOGGING": "True"
                }
            }
        ],
        "inputs": [
            {
                "id": "testApp",
                "description": "Django App zum Testen",
                "type": "pickString",
                "options": [
                    "konten",
                    "buchungen",
                    "belege",
                    "auswertungen",
                    "steuer",
                    "einstellungen"
                ]
            }
        ]
    },
    "extensions": {
        "recommendations": [
            "ms-python.python",
            "ms-python.debugpy",
            "ms-python.black-formatter",
            "charliermarsh.ruff",
            "ms-python.mypy-type-checker",
            "batisteo.vscode-django",
            "github.copilot",
            "github.copilot-chat",
            "bradlc.vscode-tailwindcss",
            "ms-ossdata.vscode-postgresql",
            "yzhang.markdown-all-in-one",
            "emilast.logfilehighlighter"
        ]
    }
}